{"version":3,"sources":["theme.ts","components/TitleBar.tsx","components/Tabs.tsx","assets/profile_image.jpg","components/ResponsiveCenter.tsx","containers/Home/Home.tsx","containers/About/About.tsx","containers/GameDev/ProjectDisplay/ProjectCard.tsx","containers/GameDev/ProjectDisplay/ProjectDialog.tsx","containers/GameDev/ProjectDisplay/ProjectDisplay.tsx","containers/GameDev/projects/OberthEffect.tsx","containers/GameDev/projects/Spinball.tsx","containers/GameDev/projects/Streamline.tsx","containers/GameDev/projects/LitestD.tsx","containers/GameDev/projects/ArtificialGravity.tsx","containers/GameDev/projects/ProjectStardust.tsx","containers/GameDev/GameDev.tsx","containers/SmallAlert/SmallAlert.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createTheme","Filler","styled","name","Tab","shouldForwardProp","prop","selected","position","alignSelf","display","flexDirection","alignItems","marginLeft","spacing","marginRight","cursor","whiteSpace","content","left","right","height","bottom","background","transition","TabText","Text","TitleBar","tabs","history","useHistory","AppBar","Toolbar","variant","noWrap","pkg","version","map","title","icon","props","Screen","match","onClick","push","path","Hidden","only","mdDown","Content","flexGrow","margin","overflow","Tabs","Fragment","ResponsiveCenter","children","Grid","container","item","xs","md","lg","xl","TitleContainer","padding","ImageContainer","Image","TitleText","textAlign","SectionBody","Home","useMediaQuery","breakpoints","up","Paper","sm","src","profile","alt","direction","sx","fontSize","pt","color","to","About","useState","document","setDocument","useEffect","fetch","process","then","response","text","markdown","m","p","CircularProgress","GridCard","Panel","ImageBackground","TextPanel","Backdrop","backgroundColor","palette","common","black","opacity","transitions","create","Foreground","white","Title","DescriptionContainer","flexBasis","justifyContent","Description","ButtonsBar","Button","ButtonBase","border","alpha","borderColor","fontFamily","typography","ProjectCard","imageFailed","setImageFailed","imageUrl","onError","tagline","detailsPath","links","href","component","Transition","React","forwardRef","ref","Slide","DialogContent","secondary","InspirationList","Spacer","ProjectDialog","open","onClose","subtitle","inspirations","Dialog","maxWidth","fullWidth","TransitionComponent","DialogTitle","DialogContentText","length","join","DialogActions","ProjectDisplay","detailsSubpath","useRouteMatch","url","goBack","OberthEffect","align","Spinball","Streamline","LitestD","ArtificialGravity","ProjectStardust","SectionTitle","borderBottom","divider","marginTop","GameDev","SmallAlert","down","dismissed","setDismissed","Main","useMemo","exact","App","StyledEngineProvider","injectFirst","ThemeProvider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a7b67fe.chunk.js","sourcesContent":["import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme()\n","import React from 'react'\nimport { Route, useHistory } from 'react-router-dom'\nimport AppBar from '@mui/material/AppBar'\nimport Hidden from '@mui/material/Hidden'\nimport Toolbar from '@mui/material/Toolbar'\nimport Text from '@mui/material/Typography'\nimport { styled } from '@mui/material/styles'\n\nimport { TabInfo } from './Tabs'\nimport pkg from '../../package.json'\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst Filler = styled('div', { name: 'Filler' })({\n  flexGrow: 1,\n})\n\ninterface TabProps extends React.HTMLAttributes<HTMLDivElement> {\n  selected: boolean\n}\n\nconst Tab = styled('div', {\n  name: 'Tab',\n  shouldForwardProp: (prop) => prop !== 'selected',\n})<TabProps>(({ selected, theme }) => ({\n  position: 'relative',\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  marginLeft: theme.spacing(1),\n  marginRight: theme.spacing(1),\n  cursor: 'pointer',\n  whiteSpace: 'nowrap',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    left: selected ? '0px' : '50%',\n    right: selected ? '0px' : '50%',\n    height: '1px',\n    bottom: '0px',\n    background: 'white',\n    transition: selected\n      ? 'left 0.2s, right 0.2s, height 0.2s'\n      : 'left 0.2s, right 0.2s, height 0s 0.2s',\n  },\n  '&:hover': {\n    '&::after': {\n      left: '0px',\n      right: '0px',\n      height: '3px',\n      transition: selected\n        ? 'left 0.2s, right 0.2s, height 0.2s'\n        : 'left 0.2s, right 0.2s',\n    },\n  },\n}))\n\nconst TabText = styled(Text, { name: 'TitleText' })(({ theme }) => ({\n  marginLeft: theme.spacing(1),\n}))\n\nexport const TitleBar = ({ tabs }: Props) => {\n  const history = useHistory()\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Text variant=\"h6\" noWrap>\n          Jack (Yunyang) Sun Portfolio v{pkg.version}\n        </Text>\n        <Filler />\n        {tabs.map(({ title, icon, Screen: _, ...props }) => (\n          <Route key={props.path} {...props}>\n            {({ match }) => (\n              <Tab\n                selected={match != null}\n                onClick={() => history.push(props.path)}\n              >\n                <Hidden only=\"md\">{icon}</Hidden>\n                <Hidden mdDown>\n                  <TabText>{title}</TabText>\n                </Hidden>\n              </Tab>\n            )}\n          </Route>\n        ))}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport { TitleBar } from './TitleBar'\n\nexport interface TabInfo {\n  exact?: boolean\n  path: string\n  title: string\n  icon: React.ReactNode\n  Screen: React.ComponentType\n}\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst Content = styled('div', { name: 'Content' })(({ theme }) => ({\n  flexGrow: 1,\n  margin: theme.spacing(1),\n  overflow: 'auto',\n}))\n\nexport const Tabs = ({ tabs }: Props) => {\n  return (\n    <React.Fragment>\n      <TitleBar tabs={tabs} />\n      <Content>\n        <Switch>\n          {tabs.map(({ title, icon, Screen, ...props }) => (\n            <Route key={props.path} {...props}>\n              <Screen />\n            </Route>\n          ))}\n        </Switch>\n      </Content>\n    </React.Fragment>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/profile_image.86908e9d.jpg\";","import React from 'react'\nimport Grid from '@mui/material/Grid'\n\ninterface Props {\n  children?: React.ReactChild | React.ReactChild[]\n}\n\nexport const ResponsiveCenter = ({ children }: Props) => {\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs={12} md={10} lg={8} xl={6}>\n        {children}\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport Text from '@mui/material/Typography'\nimport { styled, Theme } from '@mui/material/styles'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { Link } from 'react-router-dom'\n\nimport profile from '../../assets/profile_image.jpg'\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\n\nconst TitleContainer = styled(Grid, { name: 'TitleContainer' })(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n  })\n)\n\nconst ImageContainer = styled(Grid, { name: 'ImageContainer' })({\n  position: 'relative',\n  '&::before': {\n    display: 'block',\n    content: '\"\"',\n    paddingTop: '100%',\n  },\n})\n\nconst Image = styled('img', { name: 'Image' })({\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  width: '100%',\n  height: '100%',\n})\n\nconst TitleText = styled(Text, { name: 'TitleText' })(({ theme }) => ({\n  textAlign: 'left',\n  padding: theme.spacing(2),\n}))\n\nconst SectionBody = styled(Text, { name: 'SectionBody' })(({ theme }) => ({\n  padding: `${theme.spacing(1)} ${theme.spacing(5)}`,\n}))\n\nexport const Home = () => {\n  const lg = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'))\n\n  return (\n    <ResponsiveCenter>\n      <Grid container spacing={5}>\n        <Grid item xs={12}>\n          <Paper>\n            <Grid container alignItems=\"stretch\">\n              <ImageContainer item xs={12} sm={6} lg={4}>\n                <Image src={profile} alt=\"Profile\" />\n              </ImageContainer>\n              <TitleContainer\n                item\n                xs={12}\n                sm={6}\n                lg={8}\n                container\n                direction=\"column\"\n              >\n                <TitleText variant={lg ? 'h3' : 'h4'}>\n                  Jack (Yunyang) Sun\n                </TitleText>\n                <Text\n                  variant=\"h5\"\n                  sx={{ textAlign: 'right', fontSize: '1.2rem' }}\n                >\n                  Student at University of California, Irvine\n                  <br />\n                  Computer Game Science and Astrophysics major\n                </Text>\n                <Text\n                  variant=\"subtitle1\"\n                  sx={{ textAlign: 'right', pt: 2, color: 'text.secondary' }}\n                >\n                  Also a:\n                  <br />\n                  Kerbonaut\n                  <br />\n                  Space core\n                  <br />\n                  Sci-fi and fantasy enthusiast\n                  <br />\n                  Cactus hugger (obviously)\n                </Text>\n              </TitleContainer>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <TitleText variant=\"h4\">About Me</TitleText>\n            <SectionBody>\n              Hello! I'm Jack. I'm recent UCI graduate looking to enter the\n              games industry.\n            </SectionBody>\n            <SectionBody>\n              As a member of the Video Game Development Club at UCI, I have\n              contributed to various projects in the club. Go check them out at\n              the <Link to=\"/game-dev\">Game Dev</Link> page, where I talk about\n              some of them in detail!\n            </SectionBody>\n            <SectionBody>\n              As a games programmer, I have a good amount of experience writing\n              Unity C#. I enjoy establishing flexible data-driven tools that\n              enable designers to easily create game content. Occasionally I\n              would also dive into HLSL shaders to make my game look better!\n            </SectionBody>\n            <SectionBody>\n              As an astrophysicist, I enjoy employing realistic physics in my\n              games. My aim is for my games to be more than just entertainment.\n              I want my games to be capable of teaching the player something\n              about how the world works.\n            </SectionBody>\n            <SectionBody>\n              Again, head over to the <Link to=\"/game-dev\">Game Dev</Link> page\n              to check out my projects!\n            </SectionBody>\n          </Paper>\n        </Grid>\n      </Grid>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@mui/material/Paper'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Markdown from 'react-markdown'\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\n\nconst { PUBLIC_URL } = process.env\n\nexport const About = () => {\n  const [document, setDocument] = useState<string | null>(null)\n  useEffect(() => {\n    fetch(`${PUBLIC_URL}/resources/about.md`)\n      .then((response) => response.text())\n      .then((markdown) => setDocument(markdown))\n  }, [setDocument])\n\n  return (\n    <ResponsiveCenter>\n      <Paper sx={{ m: 1, p: 1 }}>\n        {document == null ? (\n          <CircularProgress />\n        ) : (\n          <Markdown children={document} />\n        )}\n      </Paper>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useState } from 'react'\nimport ButtonBase from '@mui/material/ButtonBase'\nimport Grid from '@mui/material/Grid'\nimport { alpha, styled } from '@mui/material/styles'\nimport Text from '@mui/material/Typography'\n\nimport { useHistory } from 'react-router-dom'\n\ninterface Props {\n  title: React.ReactNode\n  detailsPath: string\n  imageUrl?: string\n  tagline: string\n  links?: Array<{ title: string; href: string }>\n}\n\nconst GridCard = styled(Grid, { name: 'GridCard' })({\n  position: 'relative',\n  '&::before': {\n    content: '\"\"',\n    paddingTop: '80%',\n    display: 'block',\n  },\n})\n\nconst Panel = styled('div', { name: 'Panel' })({\n  position: 'absolute',\n  left: 4,\n  right: 4,\n  top: 4,\n  bottom: 4,\n})\n\nconst ImageBackground = styled('img', { name: 'ImageBackground' })({\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n})\n\nconst TextPanel = styled(Panel, { name: 'TextBackground' })({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  border: '2px solid grey',\n})\n\nconst Backdrop = styled(Panel, { name: 'Backdrop' })(({ theme }) => ({\n  backgroundColor: theme.palette.common.black,\n  opacity: 0,\n  transition: theme.transitions.create('opacity'),\n  [`${GridCard}:hover &`]: {\n    opacity: 0.75,\n  },\n}))\n\nconst Foreground = styled(Panel, { name: 'Foreground' })(({ theme }) => ({\n  opacity: 0,\n  transition: theme.transitions.create('opacity'),\n  [`${GridCard}:hover &`]: {\n    opacity: 1,\n  },\n\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  padding: theme.spacing(2),\n  color: theme.palette.common.white,\n}))\n\nconst TitleContainer = styled('div', { name: 'TitleContainer' })({\n  flexBasis: 0,\n  flexGrow: 1,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst Title = styled(Text, { name: 'Title' })({\n  fontWeight: 'bold',\n  userSelect: 'none',\n})\n\nconst DescriptionContainer = styled('div', { name: 'DescriptionContainer' })(\n  ({ theme }) => ({\n    flexBasis: 0,\n    flexGrow: 1,\n    padding: `0px ${theme.spacing(1)}`,\n    display: 'flex',\n    justifyContent: 'center',\n  })\n)\n\nconst Description = styled(Text, { name: 'Description' })({\n  userSelect: 'none',\n})\n\nconst ButtonsBar = styled('div', { name: 'ButtonsBar' })({\n  flexBasis: 0,\n  flexGrow: 1,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst Button = styled(ButtonBase, { name: 'Button' })(({ theme }) => ({\n  margin: `0px ${theme.spacing(0.5)}`,\n  padding: theme.spacing(1),\n  border: `solid 2px ${alpha(theme.palette.common.white, 0)}`,\n  transition: theme.transitions.create('border-color'),\n  '&:hover': {\n    borderColor: alpha(theme.palette.common.white, 0.8),\n  },\n  fontFamily: theme.typography.fontFamily,\n  fontSize: 14,\n})) as typeof ButtonBase\n\nexport const ProjectCard = (props: Props) => {\n  const history = useHistory()\n  const [imageFailed, setImageFailed] = useState(false)\n\n  return (\n    <GridCard item xs={6} md={4}>\n      {props.imageUrl != null && !imageFailed ? (\n        <Panel>\n          <ImageBackground\n            src={props.imageUrl}\n            alt=\"Game thumbnail\"\n            onError={() => setImageFailed(true)}\n          />\n        </Panel>\n      ) : (\n        <TextPanel>\n          <Text variant=\"h4\">{props.title}</Text>\n        </TextPanel>\n      )}\n      <Backdrop />\n      <Foreground>\n        <TitleContainer>\n          <Title variant=\"h5\">{props.title}</Title>\n        </TitleContainer>\n        <DescriptionContainer>\n          <Description>{props.tagline}</Description>\n        </DescriptionContainer>\n        <ButtonsBar>\n          {props.detailsPath ? (\n            <Button onClick={() => history.push(props.detailsPath)}>\n              Details\n            </Button>\n          ) : null}\n          {props.links?.map(({ title, href }) => (\n            <Button key={href} component=\"a\" href={href}>\n              {title}\n            </Button>\n          ))}\n        </ButtonsBar>\n      </Foreground>\n    </GridCard>\n  )\n}\n","import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Slide from '@mui/material/Slide'\nimport { styled } from '@mui/material/styles'\nimport { TransitionProps } from '@mui/material/transitions'\n\ninterface Props {\n  open: boolean\n  onClose: () => void\n  title: React.ReactNode\n  subtitle: string\n  inspirations?: string[]\n  children: React.ReactNode | React.ReactNode[]\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst Content = styled(DialogContent, { name: 'Content' })(({ theme }) => ({\n  color: theme.palette.text.secondary,\n}))\n\nconst InspirationList = styled('ul', { name: 'InspirationList' })({\n  margin: 0,\n})\n\nconst Spacer = styled('div', { name: 'Spacer' })({\n  flexGrow: 1,\n})\n\nexport const ProjectDialog = ({\n  open,\n  onClose,\n  title,\n  subtitle,\n  inspirations,\n  children,\n}: Props) => {\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      fullWidth\n      TransitionComponent={Transition}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <Content>\n        <DialogContentText>{subtitle}</DialogContentText>\n        {inspirations ? (\n          <DialogContentText variant=\"subtitle2\">\n            Inspirations:{' '}\n            {inspirations.length > 2 ? (\n              <InspirationList>\n                {inspirations.map((item) => (\n                  <li>{item}</li>\n                ))}\n              </InspirationList>\n            ) : (\n              inspirations.join(', ')\n            )}\n          </DialogContentText>\n        ) : null}\n        {children}\n      </Content>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n        <Spacer />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom'\nimport { ProjectCard } from './ProjectCard'\nimport { ProjectDialog } from './ProjectDialog'\n\ninterface Props {\n  title: React.ReactNode\n  detailsSubpath: string\n  // Card data\n  imageUrl?: string\n  tagline: string\n  links?: Array<{ title: string; href: string }>\n  // Dialog data\n  subtitle: string\n  inspirations?: string[]\n  children: React.ReactNode | React.ReactNode[]\n}\n\nexport const ProjectDisplay = ({\n  title,\n  detailsSubpath,\n  imageUrl,\n  tagline,\n  links,\n  subtitle,\n  inspirations,\n  children,\n}: Props) => {\n  const match = useRouteMatch()\n  const history = useHistory()\n\n  return (\n    <React.Fragment>\n      <ProjectCard\n        title={title}\n        detailsPath={`${match.url}/${detailsSubpath}`}\n        imageUrl={imageUrl}\n        tagline={tagline}\n        links={links}\n      />\n      <Route path={`${match.url}/${detailsSubpath}`}>\n        {({ match }) => (\n          <ProjectDialog\n            open={match != null}\n            onClose={() => history.goBack()}\n            title={title}\n            subtitle={subtitle}\n            inspirations={inspirations}\n          >\n            {children}\n          </ProjectDialog>\n        )}\n      </Route>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const OberthEffect = () => {\n  return (\n    <ProjectDisplay\n      title=\"Oberth Effect\"\n      detailsSubpath=\"oberthEffect\"\n      imageUrl=\"https://img.itch.zone/aW1hZ2UvMTIzODUzMi83NzU1NTcxLnBuZw==/original/EcepOn.png\"\n      tagline=\"Moddable vehicle builder\"\n      links={[\n        { title: 'itch.io', href: 'https://syy1125.itch.io/oberth-effect' },\n      ]}\n      subtitle=\"Capstone project\"\n      inspirations={[\n        'Reassembly (video game)',\n        'From The Depths (video game)',\n        'The Expanse (book/tv series)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Oberth Effect is one of my most ambitious projects so far. It is\n        designed to be a vehicle design and combat game, with some built-in\n        modding support.\n      </Text>\n      <br />\n      <Text>Concept and Design</Text>\n      <Text variant=\"body2\" align=\"justify\">\n        The idea originally came when I was playing Reassembly. Reassembly is a\n        great game, but it lacked support for real-time multiplayer.\n        <br />\n        As such, when I took course ICS 168 (Multiplayer Game Design) at UCI, I\n        came up with Oberth Effect as my project for that course. The idea was\n        to take a simplfied version of Reassembly's vehicle building system, and\n        create a multiplayer-compatible game arount it. At the end of the\n        course, I was very satisfied with the progress I made on the game and\n        decided to continue development over summer breakand into ICS 169A/B\n        (Capstone Game Project).\n      </Text>\n      <br />\n      <Text>Content and Modding</Text>\n      <Text variant=\"body2\" align=\"justify\">\n        I've always been a fan of modding. I believe that community-made content\n        can add a lot of value to a game, and I've seen modding extend the\n        experience of many games - games like Minecraft, KSP, and Stellaris, to\n        list a few. So when I was developing the game, I made sure that modding\n        has a place in Oberth Effect.\n        <br />\n        The game content is centered around using YAML documents to define and\n        describe blocks. The fields that make up a block definition roughly\n        correspond to the components of a block. The mod loader system allows\n        adding additional content, or changing existing ones, to add or modify\n        blocks in the game. This allows what I call data modding, where content\n        creators can use the existing components in the game to make their own\n        unique dynamics.\n        <br />\n        There are plans to also allow modding on the code level, where modders\n        can write their own code, define their own components, so that they have\n        deeper access to augment or modify the game code, instead of having to\n        rely on existing code architecture. This would let mods change the game\n        on the mechanics level. However, allowing code modding is ambitious and\n        would require a major refactor of the existing game code. To avoid scope\n        creep, code modding was cut for the capstone milestone and listed as a\n        low-priority task for future development.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const Spinball = () => {\n  return (\n    <ProjectDisplay\n      title=\"Spinball\"\n      detailsSubpath=\"spinball\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE1Nzg1MDMucG5n/315x250%23c/nEVHCM.png\"\n      tagline=\"Basically virtual beyblade\"\n      links={[{ title: 'itch.io', href: 'https://epkitch.itch.io/spinball' }]}\n      subtitle=\"Game Jam project, Fall 2018\"\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Spinball: Spiral Out Of Control (SPOOC, or Spinball) was my first game\n        jam project, and my best one to date.\n        <br />\n        Spinball is a physics-based fighting game, somewhat like a digital\n        version of beyblade.\n        <br />\n        At the time, I was new to Unity. I primarily worked on the UI for\n        spinball selection screen.\n        <br />\n        Later on, as an experiment with data-driven design, I refactored the\n        spinball loading system to load from a JSON file instead of being\n        written in the editor. This makes fine-tuning of various attributes of\n        spinballs much easier, since editing those attributes no longer require\n        the Unity editor - anyone with a text editor can do it.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const Streamline = () => {\n  return (\n    <ProjectDisplay\n      title=\"Streamline\"\n      detailsSubpath=\"streamline\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE4NDM3NTcucG5n/315x250%23c/gtGIK6.png\"\n      tagline=\"Circuit design puzzle\"\n      links={[{ title: 'itch.io', href: 'https://syy1125.itch.io/streamline' }]}\n      subtitle=\"VGDC Project, Fall 2018\"\n      inspirations={[\n        'SpaceChem (video game)',\n        'Psi (Minecraft mod)',\n        'Factorio (video game)',\n        'Shenzhen I/O (video game)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Streamline was my first project as team lead. It is a puzzle game.\n        <br />\n        My favourite part of the game was the data-oriented level loading system\n        that I designed and implemented for the game. Each level is serialized\n        as a JSON file, and using StreamingAssets system of Unity, the game\n        dynamically loads levels at runtime.\n        <br />\n        The nature of this level loading system allows us to easily create or\n        edit levels, even in a production build. This also enables community\n        content, since anyone who understands the schema of a level JSON file\n        can create new levels.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const LitestD = () => {\n  return (\n    <ProjectDisplay\n      title=\"LitestD\"\n      detailsSubpath=\"litestd\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE5NzE5MzAuanBn/315x250%23c/akOpR0.jpg\"\n      tagline=\"Resource management meets tower defense\"\n      links={[{ title: 'itch.io', href: 'https://syy1125.itch.io/litestd' }]}\n      subtitle=\"VGDC Project, Winter 2019\"\n      inspirations={['Into The Breach (video game)']}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        LitestD is a spin-off of the{' '}\n        <a href=\"https://dsaname.itch.io/litd\">Light in the Dark (LitD)</a>{' '}\n        project proposal by another VGDC member, Riley. LitestD is developed in\n        parallel with, but independent of, LitD.\n        <br />\n        This is the first time I used Unity's tilemap system. Ther were several\n        gotchas about the tilemap system that we had learned the hard way. One\n        of those was that it's hard to move entities on the tilemap. Unity's\n        tilemap system was originally designed for static objects. This caused\n        numerous problems and held back development quite a lot.\n        <br />\n        As this is a strategy game (which I am fond of doing), the UI work is\n        quite heavy. Fortunately, I was able to employ some of the principles I\n        learned from working with ReactJS in this project, ensuring UI\n        consistency.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const ArtificialGravity = () => {\n  return (\n    <ProjectDisplay\n      title=\"Artificial Gravity\"\n      detailsSubpath=\"artificial-gravity\"\n      imageUrl=\"https://img.itch.zone/aW1nLzI3NDM3MTYucG5n/315x250%23c/QKM4m8.png\"\n      tagline=\"What happens if you can control gravity?\"\n      links={[\n        {\n          title: 'itch.io',\n          href: 'https://syy1125.itch.io/artificial-gravity',\n        },\n      ]}\n      subtitle=\"VGDC Project, Fall 2019\"\n      inspirations={[\n        'Stormlight Archive (book series)',\n        'Terraria (video game)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        I began venturing into the third dimension with Artificial Gravity. The\n        whole game revolves around having the player be in complete control over\n        the direction of gravity.\n        <br />\n        Working with 3D assets turned out to be quite different from 2D assets.\n        For example, Unity tries to preserve the structure of the 3D model when\n        importing it, and so it is difficult to attach behaviour to individual\n        components of a model. They would frequently get reset as we change the\n        3D model.\n        <br />\n        As most artists in VGDC primarily work in 2-dimensional space, there was\n        little experience for us to draw on when we run into issues. We learned\n        much over the course of working on Artificial Gravity, and the 3D artist\n        working on our team eventually gathered enough experience to properly\n        kick off 3D art in VGDC.\n        <br />\n        I also experimented with asynchronous level loading in Unity. With that\n        technology, I was able to make transition from level 1 to level 2\n        seamless.\n        <br />\n        Ultimately, I believe having an arbitrary direction of gravity, in\n        addition to having the game be 3D, increased the design complexity too\n        much. The game content was very limited and remains largely as a proof\n        of concept.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@mui/material/Typography'\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const ProjectStardust = () => {\n  return (\n    <ProjectDisplay\n      title=\"Project Stardust\"\n      detailsSubpath=\"project-stardust\"\n      tagline=\"Incorporating orbital mechanics in grand strategy\"\n      links={[\n        {\n          title: 'itch.io',\n          href: 'https://syy1125.itch.io/project-stardust',\n        },\n      ]}\n      subtitle=\"VGDC Project, Winter 2020\"\n      inspirations={[\n        'Kerbal Space Program (video game)',\n        'Stellaris (video game)',\n        'The Expanse (book series)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Project Stardust was my attempt at creating a semi-realistic space\n        strategy game.\n        <br />\n        Since I am a double major in Computer Game Science and Astrophysics,\n        this is sort of an attempt to combine my two areas of interest. The\n        orbits demonstrate all six Keplerian elements, and transit time and cost\n        calculations are based on realistic results provided by a Lambert\n        solver. In addition, the orbits of planets in the solar system match\n        their orbital parameters in real life.\n        <br />\n        The game is unfinished. I was too ambitious in the design, and it turned\n        out that the game mechanics don't interact to create sufficiently\n        interesting dynamics and aesthetics. This flaw, combined with the COVID\n        outbreak, made me discontinue Project Stardust.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Grid from '@mui/material/Grid'\nimport Text from '@mui/material/Typography'\nimport { styled } from '@mui/material/styles'\n\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\nimport { OberthEffect } from './projects/OberthEffect'\nimport { Spinball } from './projects/Spinball'\nimport { Streamline } from './projects/Streamline'\nimport { LitestD } from './projects/LitestD'\nimport { ArtificialGravity } from './projects/ArtificialGravity'\nimport { ProjectStardust } from './projects/ProjectStardust'\n\nconst SectionTitle = styled(Grid, { name: 'SectionTitle' })(({ theme }) => ({\n  borderBottom: `solid 2px ${theme.palette.divider}`,\n  marginTop: theme.spacing(3),\n  '&:first-child': {\n    marginTop: theme.spacing(2),\n  },\n}))\n\nexport const GameDev = () => {\n  return (\n    <ResponsiveCenter>\n      <Grid container>\n        <SectionTitle item xs={12}>\n          <Text variant=\"h4\">Ongoing Project(s)</Text>\n        </SectionTitle>\n        <Grid item xs={12}>\n          <Text>\n            These are the game project(s) I'm currently actively working on.\n          </Text>\n        </Grid>\n        <OberthEffect />\n        <Grid item xs />\n        <SectionTitle item xs={12}>\n          <Text variant=\"h4\">Favourite Projects</Text>\n        </SectionTitle>\n        <Grid item xs={12}>\n          <Text>\n            These are my favourite projects, both in terms of player experience\n            and in terms of how much fun I had when working on them. I believe\n            these represet the best of my work in games development.\n          </Text>\n        </Grid>\n        <Spinball />\n        <Streamline />\n        <LitestD />\n        <Grid item xs />\n        <SectionTitle item xs={12}>\n          <Text variant=\"h4\">Other Past Projects</Text>\n        </SectionTitle>\n        <Grid item xs={12}>\n          <Text>\n            I enjoy experimenting in my game projects. While some of those are\n            successful, often they don't work out the way I want them to. Here\n            are some other game development projects that I was involved in.\n            <br />\n            Although I'm not very satisfied with the results, I have learned a\n            great deal through working on these projects.\n          </Text>\n        </Grid>\n        <ArtificialGravity />\n        <ProjectStardust />\n        <Grid item xs />\n      </Grid>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useState } from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogActions from '@mui/material/DialogActions'\n\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { Theme } from '@mui/material/styles'\n\nexport const SmallAlert = () => {\n  const xs = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'))\n  const [dismissed, setDismissed] = useState(false)\n\n  return (\n    <Dialog open={xs && !dismissed}>\n      <DialogTitle>Screen too small!</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          I did my best to squish down content so that it works on smaller\n          displays. However, this screen is simply too small. While all of the\n          content will still be visible, they may look a bit weird as they get\n          pushed out of their normal places.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={() => setDismissed(true)}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useMemo } from 'react'\nimport HomeIcon from '@mui/icons-material/Home'\nimport VideogameAssetIcon from '@mui/icons-material/VideogameAsset'\nimport InfoIcon from '@mui/icons-material/Info'\n\nimport { TabInfo, Tabs } from './components/Tabs'\nimport { Home } from './containers/Home'\nimport { About } from './containers/About'\nimport { GameDev } from './containers/GameDev'\nimport { SmallAlert } from './containers/SmallAlert'\n\nexport const Main = () => {\n  const tabs = useMemo<TabInfo[]>(\n    () => [\n      {\n        exact: true,\n        path: '/',\n        title: 'Home',\n        icon: <HomeIcon />,\n        Screen: Home,\n      },\n      {\n        path: '/game-dev',\n        title: 'Game Dev',\n        icon: <VideogameAssetIcon />,\n        Screen: GameDev,\n      },\n      {\n        path: '/about',\n        title: 'About This Site',\n        icon: <InfoIcon />,\n        Screen: About,\n      },\n    ],\n    []\n  )\n\n  return (\n    <React.Fragment>\n      <Tabs tabs={tabs} />\n      <SmallAlert />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles'\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css'\nimport { theme } from './theme'\nimport { Main } from './Main'\n\nconst App = () => (\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    </ThemeProvider>\n  </StyledEngineProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}