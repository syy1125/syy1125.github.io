{"version":3,"sources":["theme.ts","components/TitleBar.tsx","components/Tabs.tsx","components/ResponsiveCenter.tsx","containers/Home/Home.tsx","containers/About/About.tsx","containers/GameDev/ProjectDisplay/ProjectCard.tsx","containers/GameDev/ProjectDisplay/ProjectDialog.tsx","containers/GameDev/ProjectDisplay/ProjectDisplay.tsx","containers/GameDev/projects/R3.tsx","containers/GameDev/projects/Spinball.tsx","containers/GameDev/projects/Streamline.tsx","containers/GameDev/projects/LitestD.tsx","containers/GameDev/projects/ArtificialGravity.tsx","containers/GameDev/projects/ProjectStardust.tsx","containers/GameDev/GameDev.tsx","containers/SmallAlert/SmallAlert.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/profile_image.jpg"],"names":["theme","createMuiTheme","useStyles","makeStyles","toolBar","flexDirection","filler","flexGrow","tab","position","alignSelf","display","alignItems","marginLeft","spacing","marginRight","cursor","whiteSpace","content","left","right","height","bottom","background","transition","selectedTab","text","TitleBar","tabs","classes","history","useHistory","AppBar","Toolbar","variant","noWrap","version","className","map","title","icon","props","Screen","key","path","match","classnames","onClick","push","Hidden","only","smDown","margin","overflow","Tabs","Fragment","ResponsiveCenter","children","Grid","container","item","xs","md","lg","xl","titleContainer","padding","imageContainer","paddingTop","image","top","width","textAlign","subtitle","extraNotes","color","palette","grey","sectionBody","Home","useMediaQuery","breakpoints","up","Paper","sm","src","profile","alt","direction","to","paper","About","useState","document","setDocument","useEffect","fetch","process","then","response","markdown","CircularProgress","source","root","fill","objectFit","fallbackBackground","justifyContent","border","backdrop","backgroundColor","common","black","opacity","transitions","create","foreground","white","flexBasis","fontWeight","userSelect","descriptionContainer","description","buttonsBar","button","fade","borderColor","fontFamily","typography","fontSize","ProjectCard","imageFailed","setImageFailed","imageUrl","onError","tagline","detailsPath","ButtonBase","links","href","component","secondary","inspirationList","spacer","Transition","React","forwardRef","ref","Slide","ProjectDialog","open","onClose","inspirations","Dialog","maxWidth","fullWidth","TransitionComponent","DialogTitle","DialogContent","DialogContentText","length","join","DialogActions","Button","ProjectDisplay","detailsSubpath","useRouteMatch","url","goBack","R3","align","Spinball","Streamline","LitestD","ArtificialGravity","ProjectStardust","sectionTitle","borderBottomWidth","borderBottomStyle","borderBottomColor","divider","marginTop","GameDev","SmallAlert","down","dismissed","setDismissed","Main","useMemo","exact","App","ThemeProvider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.1961b622.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme()\n","import React from 'react'\nimport { Route, useHistory } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\n\nimport { TabInfo } from './Tabs'\nimport { version } from '../../package.json'\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolBar: {\n    flexDirection: 'row',\n  },\n  filler: {\n    flexGrow: 1,\n  },\n  tab: {\n    position: 'relative',\n    alignSelf: 'stretch',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    cursor: 'pointer',\n    whiteSpace: 'nowrap',\n    '&::after': {\n      content: \"''\",\n      position: 'absolute',\n      left: '50%',\n      right: '50%',\n      height: 1,\n      bottom: 0,\n      background: 'white',\n      transition: 'left 0.3s, right 0.3s, height 0s 0.3s',\n    },\n    '&:hover': {\n      '&::after': {\n        left: 0,\n        right: 0,\n        height: 3,\n        transition: 'left 0.3s, right 0.3s',\n      },\n    },\n  },\n  selectedTab: {\n    '&::after': {\n      left: 0,\n      right: 0,\n      transition: 'left 0.3s, right 0.3s',\n    },\n  },\n  text: {\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nexport const TitleBar = ({ tabs }: Props) => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Text variant=\"h6\" noWrap>\n          Jack (Yunyang) Sun Portfolio v{version}\n        </Text>\n        <div className={classes.filler} />\n        {tabs.map(({ title, icon, Screen: _, ...props }) => (\n          <Route key={props.path} {...props}>\n            {({ match }) => (\n              <div\n                className={classnames(classes.tab, {\n                  [classes.selectedTab]: match != null,\n                })}\n                onClick={() => history.push(props.path)}\n              >\n                <Hidden only=\"md\">{icon}</Hidden>\n                <Hidden smDown>\n                  <Text className={classes.text}>{title}</Text>\n                </Hidden>\n              </div>\n            )}\n          </Route>\n        ))}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TitleBar } from './TitleBar'\n\nexport interface TabInfo {\n  exact?: boolean\n  path: string\n  title: string\n  icon: React.ReactNode\n  Screen: React.ComponentType\n}\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n    overflow: 'auto'\n  },\n}))\n\nexport const Tabs = ({ tabs }: Props) => {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <TitleBar tabs={tabs} />\n      <div className={classes.content}>\n        <Switch>\n          {tabs.map(({ title, icon, Screen, ...props }) => (\n            <Route key={props.path} {...props}>\n              <Screen />\n            </Route>\n          ))}\n        </Switch>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\ninterface Props {\n  children?: React.ReactChild | React.ReactChild[]\n}\n\nexport const ResponsiveCenter = ({ children }: Props) => {\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs={12} md={10} lg={8} xl={6}>\n        {children}\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Link } from 'react-router-dom'\n\nimport profile from '../../assets/profile_image.jpg'\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\n\nconst useStyles = makeStyles((theme) => ({\n  titleContainer: {\n    padding: theme.spacing(2),\n  },\n  imageContainer: {\n    position: 'relative',\n    '&::before': {\n      display: 'block',\n      content: '\"\"',\n      paddingTop: '100%',\n    },\n  },\n  image: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%',\n  },\n  title: {\n    textAlign: 'left',\n    padding: theme.spacing(2),\n  },\n  subtitle: {\n    textAlign: 'right',\n  },\n  extraNotes: {\n    textAlign: 'right',\n    paddingTop: theme.spacing(2),\n    color: theme.palette.grey[500],\n  },\n  sectionBody: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(5)}px`,\n  },\n}))\n\nexport const Home = () => {\n  const classes = useStyles()\n  const lg = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'))\n\n  return (\n    <ResponsiveCenter>\n      <Grid container spacing={5}>\n        <Grid item xs={12}>\n          <Paper>\n            <Grid container alignItems=\"stretch\">\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                lg={4}\n                className={classes.imageContainer}\n              >\n                <img src={profile} alt=\"Profile\" className={classes.image} />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                lg={8}\n                container\n                direction=\"column\"\n                className={classes.titleContainer}\n              >\n                <Text variant={lg ? 'h3' : 'h4'} className={classes.title}>\n                  Jack (Yunyang) Sun\n                </Text>\n                <Text variant=\"h5\" className={classes.subtitle}>\n                  Student at University of California, Irvine\n                  <br />\n                  Games Programming and Astrophysics major\n                </Text>\n                <Text variant=\"subtitle1\" className={classes.extraNotes}>\n                  Also a:\n                  <br />\n                  Kerbonaut\n                  <br />\n                  Space core\n                  <br />\n                  Sci-fi and fantasy enthusiast\n                  <br />\n                  Cactus hugger (obviously)\n                </Text>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <Text variant=\"h4\" className={classes.title}>\n              About Me\n            </Text>\n            <Text className={classes.sectionBody}>\n              Hello! I'm Jack. I'm currently a 4th year UCI student looking for\n              internship opportunities in the games industry.\n            </Text>\n            <Text className={classes.sectionBody}>\n              As a member of the Video Game Development Club at UCI, I have\n              contributed to various projects in the club. Go check them out at\n              the <Link to=\"/game-dev\">Game Dev</Link> page, where I talk about\n              some of them in detail!\n            </Text>\n            <Text className={classes.sectionBody}>\n              As a games programmer, I have a good amount of experience writing\n              Unity C#. I enjoy establishing flexible data-driven tools that\n              enable designers to easily create game content. Occasionally I\n              would also dive into HLSL shaders to make my game look better!\n            </Text>\n            <Text className={classes.sectionBody}>\n              As an astrophysicist, I enjoy employing realistic physics in my\n              games. I admire Kerbal Space Program because of this - KSP manages\n              to be both fun and educational at the same time, and I aim to\n              capture that in my games as well.\n            </Text>\n            <Text className={classes.sectionBody}>\n              Again, head over to the <Link to=\"/game-dev\">Game Dev</Link> page\n              to check out my projects!\n            </Text>\n          </Paper>\n        </Grid>\n      </Grid>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Markdown from 'react-markdown'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\n\nconst { PUBLIC_URL } = process.env\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n  },\n}))\n\nexport const About = () => {\n  const classes = useStyles()\n  const [document, setDocument] = useState<string | null>(null)\n  useEffect(() => {\n    fetch(`${PUBLIC_URL}/resources/about.md`)\n      .then((response) => response.text())\n      .then((markdown) => setDocument(markdown))\n  }, [setDocument])\n\n  return (\n    <ResponsiveCenter>\n      <Paper className={classes.paper}>\n        {document == null ? (\n          <CircularProgress />\n        ) : (\n          <Markdown source={document} />\n        )}\n      </Paper>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useState } from 'react'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Grid from '@material-ui/core/Grid'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles, fade } from '@material-ui/core/styles'\n\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\n\ninterface Props {\n  title: React.ReactNode\n  detailsPath: string\n  imageUrl?: string\n  tagline: string\n  links?: Array<{ title: string; href: string }>\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    '&::before': {\n      content: '\"\"',\n      paddingTop: '80%',\n      display: 'block',\n    },\n  },\n  fill: {\n    position: 'absolute',\n    left: 4,\n    right: 4,\n    top: 4,\n    bottom: 4,\n  },\n  background: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n  fallbackBackground: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '2px solid grey',\n  },\n  backdrop: {\n    backgroundColor: theme.palette.common.black,\n    opacity: 0,\n    transition: theme.transitions.create('opacity'),\n    '$root:hover &': {\n      opacity: 0.75,\n    },\n  },\n  foreground: {\n    opacity: 0,\n    transition: theme.transitions.create('opacity'),\n    '$root:hover &': {\n      opacity: 1,\n    },\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    padding: theme.spacing(2),\n    color: theme.palette.common.white,\n  },\n  titleContainer: {\n    flexBasis: 0,\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 'bold',\n    userSelect: 'none',\n  },\n  descriptionContainer: {\n    flexBasis: 0,\n    flexGrow: 1,\n    padding: `0px ${theme.spacing(1)}px`,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  description: {\n    userSelect: 'none',\n  },\n  buttonsBar: {\n    flexBasis: 0,\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    margin: `0px ${theme.spacing(0.5)}px`,\n    padding: theme.spacing(1),\n    border: `solid 2px ${fade(theme.palette.common.white, 0)}`,\n    transition: theme.transitions.create('border-color'),\n    '&:hover': {\n      borderColor: fade(theme.palette.common.white, 0.8),\n    },\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 14,\n  },\n}))\n\nexport const ProjectCard = (props: Props) => {\n  const classes = useStyles()\n  const history = useHistory()\n  const [imageFailed, setImageFailed] = useState(false)\n\n  return (\n    <Grid item xs={6} md={4} className={classes.root}>\n      {props.imageUrl != null && !imageFailed ? (\n        <div className={classes.fill}>\n          <img\n            src={props.imageUrl}\n            className={classes.background}\n            alt=\"Game thumbnail\"\n            onError={() => setImageFailed(true)}\n          />\n        </div>\n      ) : (\n        <div className={classnames(classes.fill, classes.fallbackBackground)}>\n          <Text variant=\"h4\">{props.title}</Text>\n        </div>\n      )}\n      <div className={classnames(classes.fill, classes.backdrop)} />\n      <div className={classnames(classes.fill, classes.foreground)}>\n        <div className={classes.titleContainer}>\n          <Text variant=\"h5\" className={classes.title}>\n            {props.title}\n          </Text>\n        </div>\n        <div className={classes.descriptionContainer}>\n          <Text className={classes.description}>{props.tagline}</Text>\n        </div>\n        <div className={classes.buttonsBar}>\n          {props.detailsPath ? (\n            <ButtonBase\n              className={classes.button}\n              onClick={() => history.push(props.detailsPath!)}\n            >\n              Details\n            </ButtonBase>\n          ) : null}\n          {props.links?.map(({ title, href }) => (\n            <ButtonBase\n              key={href}\n              component=\"a\"\n              className={classes.button}\n              href={href}\n            >\n              {title}\n            </ButtonBase>\n          ))}\n        </div>\n      </div>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport { TransitionProps } from '@material-ui/core/transitions'\nimport { makeStyles } from '@material-ui/core/styles'\n\ninterface Props {\n  open: boolean\n  onClose: () => void\n  title: React.ReactNode\n  subtitle: string\n  inspirations?: string[]\n  children: React.ReactNode | React.ReactNode[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    color: theme.palette.text.secondary,\n  },\n  inspirationList: {\n    margin: 0,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport const ProjectDialog = ({\n  open,\n  onClose,\n  title,\n  subtitle,\n  inspirations,\n  children,\n}: Props) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      fullWidth\n      TransitionComponent={Transition}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent className={classes.content}>\n        <DialogContentText>{subtitle}</DialogContentText>\n        {inspirations ? (\n          <DialogContentText variant=\"subtitle2\">\n            Inspirations:{' '}\n            {inspirations.length > 2 ? (\n              <ul className={classes.inspirationList}>\n                {inspirations.map((item) => (\n                  <li>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              inspirations.join(', ')\n            )}\n          </DialogContentText>\n        ) : null}\n        {children}\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n        <div className={classes.spacer} />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom'\nimport { ProjectCard } from './ProjectCard'\nimport { ProjectDialog } from './ProjectDialog'\n\ninterface Props {\n  title: React.ReactNode\n  detailsSubpath: string\n  // Card data\n  imageUrl?: string\n  tagline: string\n  links?: Array<{ title: string; href: string }>\n  // Dialog data\n  subtitle: string\n  inspirations?: string[]\n  children: React.ReactNode | React.ReactNode[]\n}\n\nexport const ProjectDisplay = ({\n  title,\n  detailsSubpath,\n  imageUrl,\n  tagline,\n  links,\n  subtitle,\n  inspirations,\n  children,\n}: Props) => {\n  const match = useRouteMatch()\n  const history = useHistory()\n\n  return (\n    <React.Fragment>\n      <ProjectCard\n        title={title}\n        detailsPath={`${match.url}/${detailsSubpath}`}\n        imageUrl={imageUrl}\n        tagline={tagline}\n        links={links}\n      />\n      <Route path={`${match.url}/${detailsSubpath}`}>\n        {({ match }) => (\n          <ProjectDialog\n            open={match != null}\n            onClose={() => history.goBack()}\n            title={title}\n            subtitle={subtitle}\n            inspirations={inspirations}\n          >\n            {children}\n          </ProjectDialog>\n        )}\n      </Route>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const R3 = () => {\n  return (\n    <ProjectDisplay\n      title={\n        <>\n          R<sup>3</sup>\n        </>\n      }\n      detailsSubpath=\"r3\"\n      tagline=\"Build your own combat vehicle\"\n      subtitle=\"Personal project\"\n      inspirations={[\n        'From The Depths (video game)',\n        'Robocraft (video game)',\n        'Space Engineers (video game)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        R<sup>3</sup> is designed to be a physics-based game centered on\n        designing and using vehicles constructed from blocks. The vehicle's\n        physical characteristics and behaviour are all determined by its blocks,\n        making it crucial to have a good design in order to create a\n        well-behaving vehicle.\n      </Text>\n      <Text variant=\"body2\">Currently this is barely a prototype.</Text>\n      <br />\n      <Text>Concept and Design</Text>\n      <Text variant=\"body2\" align=\"justify\">\n        When coming up with the initial concept, I was particularly inspired by\n        the degree of customization possible in FTD. However, I believe that\n        while the complex mechanics present in FTD makes the game enjoyable to\n        players like me, it tends to overwhelm new players, introducing a\n        barrier to entry.\n        <br />\n        As such, I wanted to see if I can simplify the initial information load\n        that a player needs to handle, while still retaining as much\n        customization capabilities as possible.\n      </Text>\n      <br />\n      <Text>Architecture</Text>\n      <Text variant=\"body2\" align=\"justify\">\n        The game contains two main modules, blocks and vehicle, along with\n        various supporting modules.\n        <br />\n        The blocks module is responsible for describing the characteristics of a\n        block. Some information that it contains are: display name, block\n        material (a custom construct), volume, moment of inertial per unit\n        volume.\n        <br />\n        The block material contains information such as the block density and\n        rendering material. Using density and volume, the game system can then\n        compute the block mass, which, in turn, can be used to compute the\n        moment of inertial tensor.\n        <br />\n        Each vehicle is, effectively, a collection of blocks. Continuing the\n        example of moment of inertia, the vehicle physics controller would\n        aggregate the moments of inertia from all blocks, and then pass the\n        final value to Unity's physics engine.\n        <br />\n        The blocks are stored and loaded using Unity's Addressable system. This\n        is my first time working with such a system, and I'm learning much, both\n        in knowledge of the Addressable system, and in insights about the\n        demands of dynamic asset loading in games programming in general that\n        inspired such a system.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const Spinball = () => {\n  return (\n    <ProjectDisplay\n      title=\"Spinball\"\n      detailsSubpath=\"spinball\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE1Nzg1MDMucG5n/315x250%23c/nEVHCM.png\"\n      tagline=\"Basically virtual beyblade\"\n      links={[{ title: 'itch.io', href: 'https://epkitch.itch.io/spinball' }]}\n      subtitle=\"Game Jam project, Fall 2018\"\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Spinball: Spiral Out Of Control (SPOOC, or Spinball) was my first game\n        jam project, and my best one to date.\n        <br />\n        Spinball is a physics-based fighting game, somewhat like a digital\n        version of beyblade.\n        <br />\n        At the time, I was new to Unity. I primarily worked on the UI for\n        spinball selection screen.\n        <br />\n        Later on, as an experiment with data-driven design, I refactored the\n        spinball loading system to load from a JSON file instead of being\n        written in the editor. This makes fine-tuning of various attributes of\n        spinballs much easier, since editing those attributes no longer require\n        the Unity editor - anyone with a text editor can do it.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const Streamline = () => {\n  return (\n    <ProjectDisplay\n      title=\"Streamline\"\n      detailsSubpath=\"streamline\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE4NDM3NTcucG5n/315x250%23c/gtGIK6.png\"\n      tagline=\"Circuit design puzzle\"\n      links={[{ title: 'itch.io', href: 'https://syy1125.itch.io/streamline' }]}\n      subtitle=\"VGDC Project, Fall 2018\"\n      inspirations={[\n        'SpaceChem (video game)',\n        'Psi (Minecraft mod)',\n        'Factorio (video game)',\n        'Shenzhen I/O (video game)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Streamline was my first project as team lead. It is a puzzle game.\n        <br />\n        My favourite part of the game was the data-oriented level loading system\n        that I designed and implemented for the game. Each level is serialized\n        as a JSON file, and using StreamingAssets system of Unity, the game\n        dynamically loads levels at runtime.\n        <br />\n        The nature of this level loading system allows us to easily create or\n        edit levels, even in a production build. This also enables community\n        content, since anyone who understands the schema of a level JSON file\n        can create new levels.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const LitestD = () => {\n  return (\n    <ProjectDisplay\n      title=\"LitestD\"\n      detailsSubpath=\"litestd\"\n      imageUrl=\"https://img.itch.zone/aW1nLzE5NzE5MzAuanBn/315x250%23c/akOpR0.jpg\"\n      tagline=\"Resource management meets tower defense\"\n      links={[{ title: 'itch.io', href: 'https://syy1125.itch.io/litestd' }]}\n      subtitle=\"VGDC Project, Winter 2019\"\n      inspirations={['Into The Breach (video game)']}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        LitestD is a spin-off of the{' '}\n        <a href=\"https://dsaname.itch.io/litd\">Light in the Dark (LitD)</a>{' '}\n        project proposal by another VGDC member, Riley. LitestD is developed in\n        parallel with, but independent of, LitD.\n        <br />\n        This is the first time I used Unity's tilemap system. Ther were several\n        gotchas about the tilemap system that we had learned the hard way. One\n        of those was that it's hard to move entities on the tilemap. Unity's\n        tilemap system was originally designed for static objects. This caused\n        numerous problems and held back development quite a lot.\n        <br />\n        As this is a strategy game (which I am fond of doing), the UI work is\n        quite heavy. Fortunately, I was able to employ some of the principles I\n        learned from working with ReactJS in this project, ensuring UI\n        consistency.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\n\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const ArtificialGravity = () => {\n  return (\n    <ProjectDisplay\n      title=\"Artificial Gravity\"\n      detailsSubpath=\"artificial-gravity\"\n      imageUrl=\"https://img.itch.zone/aW1nLzI3NDM3MTYucG5n/315x250%23c/QKM4m8.png\"\n      tagline=\"What happens if you can control gravity?\"\n      links={[\n        {\n          title: 'itch.io',\n          href: 'https://syy1125.itch.io/artificial-gravity',\n        },\n      ]}\n      subtitle=\"VGDC Project, Fall 2019\"\n      inspirations={[\n        'Stormlight Archive (book series)',\n        'Terraria (video game)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        I began venturing into the third dimension with Artificial Gravity. The\n        whole game revolves around having the player be in complete control over\n        the direction of gravity.\n        <br />\n        Working with 3D assets turned out to be quite different from 2D assets.\n        For example, Unity tries to preserve the structure of the 3D model when\n        importing it, and so it is difficult to attach behaviour to individual\n        components of a model. They would frequently get reset as we change the\n        3D model.\n        <br />\n        As most artists in VGDC primarily work in 2-dimensional space, there was\n        little experience for us to draw on when we run into issues. We learned\n        much over the course of working on Artificial Gravity, and the 3D artist\n        working on our team eventually gathered enough experience to properly\n        kick off 3D art in VGDC.\n        <br />\n        I also experimented with asynchronous level loading in Unity. With that\n        technology, I was able to make transition from level 1 to level 2\n        seamless.\n        <br />\n        Ultimately, I believe having an arbitrary directio nfo gravity, in\n        addition to having the game be 3D, increased the design complexity too\n        much. The game content was very limited and remains largely as a proof\n        of concept.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Text from '@material-ui/core/Typography'\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay'\n\nexport const ProjectStardust = () => {\n  return (\n    <ProjectDisplay\n      title=\"Project Stardust\"\n      detailsSubpath=\"project-stardust\"\n      tagline=\"Orbital mechanics meets grand strategy\"\n      links={[\n        {\n          title: 'itch.io',\n          href: 'https://syy1125.itch.io/project-stardust',\n        },\n      ]}\n      subtitle=\"VGDC Project, Winter 2020\"\n      inspirations={[\n        'Kerbal Space Program (video game)',\n        'Stellaris (video game)',\n        'The Expanse (book series)',\n      ]}\n    >\n      <Text variant=\"body2\" align=\"justify\">\n        Project Stardust was my attempt at creating a semi-realistic space\n        strategy game.\n        <br />\n        Since I am a double major in Computer Game Science and Astrophysics,\n        this is sort of an attempt to combine my two areas of interest. The\n        orbits demonstrate all six Keplerian elements, and transit time and cost\n        calculations are based on realistic results provided by a Lambert\n        solver. In addition, the orbits of planets in the solar system match\n        their orbital parameters in real life.\n        <br />\n        The game is unfinished. I was too ambitious in the design, and it turned\n        out that the game mechanics don't interact to create sufficiently\n        interesting dynamics and aesthetics. This flaw, combined with the COVID\n        outbreak, made me discontinue Project Stardust.\n      </Text>\n    </ProjectDisplay>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { ResponsiveCenter } from '../../components/ResponsiveCenter'\nimport { R3 } from './projects/R3'\nimport { Spinball } from './projects/Spinball'\nimport { Streamline } from './projects/Streamline'\nimport { LitestD } from './projects/LitestD'\nimport { ArtificialGravity } from './projects/ArtificialGravity'\nimport { ProjectStardust } from './projects/ProjectStardust'\n\nconst useStyles = makeStyles((theme) => ({\n  sectionTitle: {\n    borderBottomWidth: 2,\n    borderBottomStyle: 'solid',\n    borderBottomColor: theme.palette.divider,\n    '&:first-child': {\n      marginTop: theme.spacing(2),\n    },\n    '&:not(:first-child)': {\n      marginTop: theme.spacing(5),\n    },\n  },\n}))\n\nexport const GameDev = () => {\n  const classes = useStyles()\n\n  return (\n    <ResponsiveCenter>\n      <Grid container>\n        <Grid item xs={12} className={classes.sectionTitle}>\n          <Text variant=\"h4\">Ongoing Project(s)</Text>\n        </Grid>\n        <Grid item xs={12}>\n          <Text>\n            These are the game project(s) I'm currently actively working on.\n          </Text>\n        </Grid>\n        <R3 />\n        <Grid item xs />\n        <Grid item xs={12} className={classes.sectionTitle}>\n          <Text variant=\"h4\">Favourite Projects</Text>\n        </Grid>\n        <Grid item xs={12}>\n          <Text>\n            These are my favourite projects, both in terms of player experience\n            and in terms of how much fun I had when working on them. I believe\n            these represet the best of my work in games development.\n          </Text>\n        </Grid>\n        <Spinball />\n        <Streamline />\n        <LitestD />\n        <Grid item xs />\n        <Grid item xs={12} className={classes.sectionTitle}>\n          <Text variant=\"h4\">Other Past Projects</Text>\n        </Grid>\n        <Grid item xs={12}>\n          <Text>\n            I enjoy experimenting in my game projects. While some of those are\n            successful, often they don't work out the way I want them to. Here\n            are some other game development projects that I was involved in.\n            <br />\n            Although I'm not very satisfied with the results, I have learned a\n            great deal through working on these projects.\n          </Text>\n        </Grid>\n        <ArtificialGravity />\n        <ProjectStardust />\n        <Grid item xs />\n      </Grid>\n    </ResponsiveCenter>\n  )\n}\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Theme } from '@material-ui/core/styles'\n\nexport const SmallAlert = () => {\n  const xs = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'))\n  const [dismissed, setDismissed] = useState(false)\n\n  return (\n    <Dialog open={xs && !dismissed}>\n      <DialogTitle>Screen too small!</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          I did my best to squish down content so that it works on smaller\n          displays. However, this screen is simply too small. While all of the\n          content will still be visible, they may look a bit weird as they get\n          pushed out of their normal places.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={() => setDismissed(true)}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useMemo } from 'react'\nimport HomeIcon from '@material-ui/icons/Home'\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport { TabInfo, Tabs } from './components/Tabs'\nimport { Home } from './containers/Home'\nimport { About } from './containers/About'\nimport { GameDev } from './containers/GameDev'\nimport { SmallAlert } from './containers/SmallAlert'\n\nexport const Main = () => {\n  const tabs = useMemo<TabInfo[]>(\n    () => [\n      {\n        exact: true,\n        path: '/',\n        title: 'Home',\n        icon: <HomeIcon />,\n        Screen: Home,\n      },\n      {\n        path: '/game-dev',\n        title: 'Game Dev',\n        icon: <VideogameAssetIcon />,\n        Screen: GameDev,\n      },\n      {\n        path: '/about',\n        title: 'About This Site',\n        icon: <InfoIcon />,\n        Screen: About,\n      },\n    ],\n    []\n  )\n\n  return (\n    <React.Fragment>\n      <Tabs tabs={tabs} />\n      <SmallAlert />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css'\nimport { theme } from './theme'\nimport { Main } from './Main'\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  </ThemeProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/profile_image.d511c368.jpg\";"],"sourceRoot":""}