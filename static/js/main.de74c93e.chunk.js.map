{"version":3,"sources":["theme.ts","components/TitleBar.tsx","components/Tabs.tsx","screens/gamedev/Card.tsx","screens/gamedev/GameDev.tsx","screens/about/About.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","useStyles","makeStyles","toolBar","flexDirection","filler","flexGrow","tab","position","alignSelf","display","alignItems","marginLeft","spacing","marginRight","cursor","content","left","right","bottom","height","background","transition","selectedTab","hoverTab","TitleBar","tabs","classes","history","useHistory","AppBar","Toolbar","variant","version","className","map","title","props","Screen","key","path","match","classnames","onClick","push","margin","Tabs","Fragment","root","width","reverse","image","objectFit","justifyContent","link","Card","imageUrl","description","details","TitleComponent","Link","Text","Paper","elevation","src","alt","href","card","Summary","withStyles","minHeight","marginTop","expanded","name","AccordionSummary","GameDev","useState","setExpanded","handleChange","useCallback","panel","_","isExpanded","Accordion","onChange","component","expandIcon","id","aria-controls","align","paper","padding","About","document","setDocument","useEffect","fetch","process","then","response","text","markdown","CircularProgress","source","Main","useMemo","exact","App","ThemeProvider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de74c93e.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme()\n","import React from 'react'\nimport { Route, useHistory } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\n\nimport { TabInfo } from './Tabs'\nimport { version } from '../../package.json'\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolBar: {\n    flexDirection: 'row',\n  },\n  filler: {\n    flexGrow: 1,\n  },\n  tab: {\n    position: 'relative',\n    alignSelf: 'stretch',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    cursor: 'pointer',\n    '&::after': {\n      content: \"''\",\n      position: 'absolute',\n      left: '50%',\n      right: '50%',\n      bottom: 0,\n      height: 3,\n      background: 'white',\n      transition: 'left 0.3s, right 0.3s',\n    },\n  },\n  selectedTab: {\n    '&::after': {\n      left: 0,\n      right: 0,\n      height: 1,\n    },\n  },\n  hoverTab: {\n    '&:hover': {\n      '&::after': {\n        left: 0,\n        right: 0,\n        height: 3,\n      },\n    },\n  },\n}))\n\nexport const TitleBar = ({ tabs }: Props) => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Text variant=\"h6\">Jack (Yunyang) Sun Portfolio v{version}</Text>\n        <div className={classes.filler} />\n        {tabs.map(({ title, Screen: _, ...props }) => (\n          <Route key={props.path} {...props}>\n            {({ match }) => (\n              <div\n                className={classnames(\n                  classes.tab,\n                  { [classes.selectedTab]: match != null },\n                  classes.hoverTab\n                )}\n                onClick={() => history.push(props.path)}\n              >\n                <Text>{title}</Text>\n              </div>\n            )}\n          </Route>\n        ))}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TitleBar } from './TitleBar'\n\nexport interface TabInfo {\n  exact?: boolean\n  path: string\n  title: string\n  Screen: React.ComponentType\n}\n\ninterface Props {\n  tabs: TabInfo[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n  },\n}))\n\nexport const Tabs = ({ tabs }: Props) => {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <TitleBar tabs={tabs} />\n      <div className={classes.content}>\n        <Switch>\n          {tabs.map(({ title, Screen, ...props }) => (\n            <Route key={props.path} {...props}>\n              <Screen />\n            </Route>\n          ))}\n        </Switch>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\ninterface Props {\n  imageUrl?: string\n  link?: string\n  title: React.ReactNode\n  description: string\n  details: React.ReactNode\n  reverse?: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: (props: Props) => (props.reverse ? 'row-reverse' : 'row'),\n    height: 250,\n    margin: theme.spacing(1),\n  },\n  image: {\n    objectFit: 'contain',\n  },\n  content: {\n    margin: `0px ${theme.spacing(2)}px`,\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: (props: Props) => (props.reverse ? 'flex-end' : 'flex-start'),\n    justifyContent: 'center',\n  },\n  link: {\n    cursor: 'pointer',\n  },\n}))\n\nexport const Card = (props: Props) => {\n  const { imageUrl, title, description, details, link } = props\n  const classes = useStyles(props)\n  const TitleComponent = link != null ? Link : Text\n\n  return (\n    <Paper elevation={2} className={classes.root}>\n      {imageUrl != null ? <img src={imageUrl} alt=\"icon\" /> : null}\n      <div className={classes.content}>\n        <TitleComponent href={link} variant=\"h4\" className={classes.link}>\n          {title}\n        </TitleComponent>\n        <Text variant=\"subtitle1\">{description}</Text>\n        {details}\n      </div>\n    </Paper>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport Details from '@material-ui/core/AccordionDetails'\nimport Paper from '@material-ui/core/Paper'\nimport Text from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { Card } from './Card'\n\ntype TabName = 'fav' | 'ongoing' | 'rest'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    width: '60%',\n    left: '20%',\n    right: '20%',\n  },\n  card: {\n    width: '100%',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n}))\n\nconst Summary = withStyles(\n  {\n    root: {\n      transition: 'margin 0.3s',\n      '&$expanded': {\n        minHeight: 48,\n        marginTop: 16,\n      },\n    },\n    content: {\n      '&$expanded': {\n        margin: '12px 0px',\n      },\n    },\n    expanded: {},\n  },\n  { name: 'Summary' }\n)(AccordionSummary) as typeof AccordionSummary\n\nexport const GameDev = () => {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState<TabName | null>(null)\n  const handleChange = useCallback(\n    (panel: TabName) => (_: unknown, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : null)\n    },\n    [setExpanded]\n  )\n\n  return (\n    <div className={classes.root}>\n      <Accordion\n        elevation={0}\n        expanded={expanded === 'ongoing'}\n        onChange={handleChange('ongoing')}\n      >\n        <Summary\n          component={Paper}\n          expandIcon={<ExpandMoreIcon />}\n          id=\"ongoing-header\"\n          aria-controls=\"ongoing-content\"\n        >\n          Ongoing Projects\n        </Summary>\n        <Details className={classes.details}>\n          <Text>\n            These are the game project(s) I'm currently actively working on.\n          </Text>\n          <Card\n            title={\n              <span>\n                R<sup>3</sup>\n              </span>\n            }\n            description=\"Personal project\"\n            details={\n              <Text align=\"justify\">\n                R<sup>3</sup> is a block-based vehicle design and combat game.\n                Primary sources of inspiration are Robocraft and From The\n                Depths.\n              </Text>\n            }\n          />\n        </Details>\n      </Accordion>\n      <Accordion\n        elevation={0}\n        expanded={expanded === 'fav'}\n        onChange={handleChange('fav')}\n      >\n        <Summary\n          component={Paper}\n          expandIcon={<ExpandMoreIcon />}\n          id=\"favourites-header\"\n          aria-controls=\"favourites-content\"\n        >\n          Favourite Past Projects\n        </Summary>\n        <Details className={classes.details}>\n          <Text>\n            These are my favourite projects, both in terms of user experience\n            and in terms of how much fun I had when working on them. I believe\n            these represet the best of my work in games development.\n          </Text>\n          <Card\n            imageUrl=\"https://img.itch.zone/aW1nLzE1Nzg1MDMucG5n/315x250%23c/nEVHCM.png\"\n            link=\"https://epkitch.itch.io/spinball\"\n            title=\"Spinball\"\n            description=\"Game jam project, Fall 2018\"\n            details={\n              <Text align=\"justify\">\n                Spinball is one of my earliest game projects. It is a\n                physics-based fighting game, somewhat like a digital version of\n                beyblade.\n                <br />\n                At the time, I was relatively new to Unity. I primarily worked\n                on the UI for spinball selection screen. Later on, as an\n                experiment with data-oriented design, I refactored the spinball\n                loading system to load from a JSON file, instead of being\n                written in the editor.\n              </Text>\n            }\n          />\n          <Card\n            reverse\n            imageUrl=\"https://img.itch.zone/aW1nLzE4NDM3NTcucG5n/315x250%23c/gtGIK6.png\"\n            link=\"https://syy1125.itch.io/streamline\"\n            title=\"Streamline\"\n            description=\"Quarter-long VGDC project, Fall 2018\"\n            details={\n              <Text align=\"justify\">\n                Streamline was my first game project as the team lead. It is a\n                puzzle game, inspired by SpaceChen and the Minecraft mod Psi.\n                <br />I designed a data-oriented level loading system for the\n                game. Each level is represented by a JSON file stored in the\n                StreamingAssets folder. The schema that the JSON file follows is\n                fairly simple. This enabled us to easily create or edit levels\n                even when using a production build. This also enables community\n                content, since anyone who understands the schema of the level\n                file will be able to create new levels.\n              </Text>\n            }\n          />\n          <Card\n            imageUrl=\"https://img.itch.zone/aW1nLzE5NzE5MzAuanBn/315x250%23c/akOpR0.jpg\"\n            link=\"https://syy1125.itch.io/litestd\"\n            title=\"LitestD\"\n            description=\"Quater-long VGDC project, Winter 2019\"\n            details={\n              <Text align=\"justify\">\n                LitestD is a spin-off for the{' '}\n                <a href=\"https://dsaname.itch.io/litd\">Light in the Dark</a>{' '}\n                project by another VGDC member, Riley, developed in parallel to\n                LitD. I ended up being the team lead for the project. The game\n                is a mix of resource management and tower defense, inspired by\n                Into The Breach.\n                <br />\n                This game is my first time using Unity's Tilemap system. We were\n                forced to learn some surprising technical details about Unity\n                Tilemap the hard way. For example, it's actually pretty hard to\n                move entites on the tilemap - the tilemap seem to be intended\n                for static objects. This caused us numerous problems as we tried\n                to mvoe the enemies around on the tilemap.\n                <br />\n                As this is a strategy game, the UI work is heavy. I have applied\n                many principles I learned from working with ReactJS to ensure\n                the consistency of the user interface, and in the process\n                refined my UI workflow.\n              </Text>\n            }\n          />\n        </Details>\n      </Accordion>\n      <Accordion\n        elevation={0}\n        expanded={expanded === 'rest'}\n        onChange={handleChange('rest')}\n      >\n        <Summary\n          component={Paper}\n          expandIcon={<ExpandMoreIcon />}\n          id=\"other-projects-header\"\n          aria-controls=\"other-projects-content\"\n        >\n          Other Past Projects\n        </Summary>\n        <Details className={classes.details}>\n          <Text>\n            I enjoy experimenting in my game projects. While some of those are\n            successful, many don't work out the way I want them to. Here are\n            some other game development projects that I was involved in.\n            Although I'm not very satisfied with the results, I have learned a\n            great deal through working on these projects.\n          </Text>\n          <Card\n            imageUrl=\"https://img.itch.zone/aW1nLzI3NDM3MTYucG5n/315x250%23c/QKM4m8.png\"\n            link=\"https://syy1125.itch.io/artificial-gravity\"\n            title=\"Artificial Gravity\"\n            description=\"Quarter-long VGDC project, Fall 2019\"\n            details={\n              <Text align=\"justify\">\n                Artificial Gravity was my first venture into 3D games. It\n                revolves around the concept of having the player be in total\n                control of the direction of gravity. The game is partially\n                inspired by the book series Stormlight Archive by Brandon\n                Sanderson.\n                <br />\n                In creating this game, I have learned much about working with 3D\n                art assets, and also experimented with asynchronous level\n                loading.\n                <br />\n                Ultimately, I believe having an arbitrary direction of gravity,\n                in addition to the game being three-dimensional, increased the\n                level design complexity too much, and thus the game content was\n                very limited.\n              </Text>\n            }\n          />\n          <Card\n            link=\"https://syy1125.itch.io/project-stardust\"\n            title=\"Project Stardust\"\n            description=\"Quarter-long VGDC project, Winter 2020\"\n            details={\n              <Text>\n                Project Stardust was my attempt at creating a semi-realistic\n                space strategy game. It is inspired by Kerbal Space Program,\n                Stellaris, and The Expanse book series.\n                <br />\n                As I double major in Computer Game Science and Astrophysics,\n                this could count as an attempt by me to combine my two areas of\n                study. The planets in the game use realistic orbits that\n                demonstrate all six keplerian elements, and I have set up\n                transit calculations that are based on realistic results\n                provided by a Lambert solver.\n                <br />\n                The game is very much unfinished. I was too ambitious in the\n                design, and it turned out the game mechanics, while reasonable,\n                don't interact to create dynamics that were interesting enough.\n                This, combined with the COVID outbreak, made me discontinue this\n                project.\n              </Text>\n            }\n          />\n        </Details>\n      </Accordion>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Markdown from 'react-markdown'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst { PUBLIC_URL } = process.env\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}))\n\nexport const About = () => {\n  const classes = useStyles()\n  const [document, setDocument] = useState<string | null>(null)\n  useEffect(() => {\n    fetch(`${PUBLIC_URL}/resources/about.md`)\n      .then((response) => response.text())\n      .then((markdown) => setDocument(markdown))\n  }, [setDocument])\n\n  return (\n    <Paper className={classes.paper}>\n      {document == null ? <CircularProgress /> : <Markdown source={document} />}\n    </Paper>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { TabInfo, Tabs } from './components/Tabs'\nimport { GameDev } from './screens/gamedev'\nimport { About } from './screens/about'\n\nexport const Main = () => {\n  const tabs = useMemo<TabInfo[]>(\n    () => [\n      {\n        exact: true,\n        path: '/',\n        title: 'Home',\n        Screen: () => null,\n      },\n      {\n        path: '/game-dev',\n        title: 'Game Dev',\n        Screen: GameDev,\n      },\n      {\n        path: '/about',\n        title: 'About This Site',\n        Screen: About,\n      },\n      {\n        path: '/contact',\n        title: 'Contact / Resume',\n        Screen: () => null,\n      },\n    ],\n    []\n  )\n\n  return <Tabs tabs={tabs} />\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css'\nimport { theme } from './theme'\nimport { Main } from './Main'\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  </ThemeProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}